*ddt.txt*	Dark Deno Terminal interface for Vim/Neovim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS                                                        *ddt-contents*

Introduction		|ddt-introduction|
Install			|ddt-install|
Interface		|ddt-interface|
  Options		  |ddt-options|
  Functions		  |ddt-functions|
  Custom Functions	  |ddt-custom-functions|
  UI Functions		  |ddt-ui-functions|
ddt Sources		|ddt-ddu-sources|
Examples		|ddt-examples|
FAQ			|ddt-faq|
Compatibility		|ddt-compatibility|


==============================================================================
INTRODUCTION                                                *ddt-introduction*

*ddt* is the abbreviation of "Dark Deno Terminal interface".

If you don't want to configure plugins, you don't have to use the plugin. It
does not work with zero configuration. You can use other plugins.


==============================================================================
INSTALL                                                          *ddt-install*

NOTE: ddt.vim requires Vim 9.1.0448+ or Neovim 0.10.0+ (latest is
recommended).

Please install both Deno 1.45+ and "denops.vim" v7.0+.

https://deno.land/
https://github.com/vim-denops/denops.vim

==============================================================================
INTERFACE                                                      *ddt-interface*

------------------------------------------------------------------------------
OPTIONS                                                          *ddt-options*


------------------------------------------------------------------------------
FUNCTIONS                                                      *ddt-functions*

                                                                 *ddt#start()*
ddt#start([{options}])
		Creates a new Ddt.
		NOTE: It can be called by "start" dispatcher in TypeScript.
		NOTE: It must be called after |DenopsReady|.

		Refer to |ddt-options| about {options}.  If you skip a value,
		it uses the default value.

CUSTOM FUNCTIONS                                        *ddt-custom-functions*

                                                    *ddt#custom#load_config()*
ddt#custom#load_config({path})
		Load TypeScript configuration from {path} file.
		NOTE: {path} must be full path.
		NOTE: The loading is asynchronous.

                                                   *ddt#custom#patch_global()*
ddt#custom#patch_global({option-name}, {value})
ddt#custom#patch_global({dict})
		Set {option-name} option to {value}.
		If {dict} is available, the key is {option-name} and the value
		is {value}. See |ddt-options| for available {option-name}.

                                                    *ddt#custom#patch_local()*
ddt#custom#patch_local({ddu-name}, {option-name}, {value})
ddt#custom#patch_local({ddu-name}, {dict})
		Set local options for specific |ddt-option-name|.
		The arguments are the same as for |ddt#custom#patch_global()|.

                                                     *ddt#custom#set_global()*
ddt#custom#set_global({dict})
		Overwrites all options to {dict}.
		The key is {option-name} and the value is {value}. See
		|ddt-options| for available {option-name}.

                                                      *ddt#custom#set_local()*
ddt#custom#set_local({ddu-name}, {dict})
		Set local options for specific |ddt-option-name|.
		The arguments are the same as for |ddt#custom#set_global()|.

UI FUNCTIONS                                                *ddu-ui-functions*

                                                             *ddt#ui_action()*
ddu#ui_action({name}, {action}[, {params}])
		Do the {action} action in current UI synchronously.

		{name} is specified ddt name(|ddt-option-name|).

		{params} is action params.
		NOTE: You must not call it in |autocmd|.


==============================================================================
DDU SOURCES                                                  *ddt-ddu-sources*

                                                      *ddt-ddu-source-ddt_tab*
ddt_tab
		Gather ddt from tabs.

==============================================================================
EXAMPLES                                                        *ddt-examples*
>
<

==============================================================================
FAQ                                                                  *ddt-faq*

FAQ 1:                                                             |ddt-faq-1|
	How to donate money to you?

FAQ 2:                                                             |ddt-faq-2|
	What means "dark powered"?

FAQ 3:                                                             |ddt-faq-3|
	Why ddt.vim uses Deno?

------------------------------------------------------------------------------
                                                                   *ddt-faq-1*
Q: How to donate money to you?

A: I have started github sponsorship to spend more time for Vim/Neovim
plugins.  You can donate money to help me!

   https://github.com/sponsors/Shougo

                                                                   *ddt-faq-2*
Q: What means "dark powered"?

A: I think text editor is everything in the world. I want to do everything in
Vim(Neovim) like Emacs. It is not allowed by |design-not| in Vim. It is not
the light way to use Vim. So I have defined it as the dark way. I am the dark
Vimmer. My plugins are dark powered.

                                                                   *ddt-faq-3*
Q: Why ddt.vim uses Deno?

A: Deno is asynchronous and faster than Vim script and it can be used in both
Vim and Neovim.  The features are what I desired.
I have created some plugins by TypeScript.  The development is very fun and
easy to maintain.

==============================================================================
COMPATIBILITY                                              *ddt-compatibility*

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
